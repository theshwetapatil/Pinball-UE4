BLUEPRINTS
Types of Blueprint scripts: Construction Scirpt and Event Grpah
Construction Scirpt handles all the things one would want to run when the Blueprint class is created.
Event Graph contains all the code related to the gameplay events. It used in most cases when making something in blueprint.
Within Event Graph: Begin Play and Tick
Begin Play is the event that fires the moment game begins or actor enters the already running gameplay.
Tick functions runs once per frame, per actor. Can be disabled.
After Begin Play has run, Tick runs. Every single frame, every time the PC is updated, it Ticks every actor again and again and again.
**********Time between Ticks, time between computer updating all of the actors again and again is called the Delta Time. 
Time gap between two Ticks is represented by Delta Seconds variable, in Event Graph.
Delta Second is of float type.
Velocity change in Impuse says ignore any actual mass of the object and move it at the given speed.
--------------------
Line Check is done to check what's beneath the ball itself.
Line Trace- Whenever something hits between start position and end position, it returns a value to inspect it more closely and get information from it.
Line Trace has to be started from Actor's[In this case, Ball's] current position.
****Within Unreal, X-Forwards, Y-Sideways, Z-Up and Down
After collision with ground, all the Break Hit Result information can be obtained.
Select and CTR+W- To duplicate cell in Event Graph
In Material, Hold V+Left-Click to create Vector Parameter.
For the player character, there are normally aspects: Controller and Pawn
Controller kinda refers to the brain of the object. In the context of player, controller handles all of the inputs.
Pawn is kinda like the body of the object.
Controller sends messages to the pawn and the pawn knows what to do.
Player pawn is not required for a Pinball game.
For Camera, Auto Player Activation is set to Player 0.
--------------------
For Bumpers, new blueprint needs to be created.
Two meshes required for Bumpers: Bump Mechanism and Pop Bumper Base
*******Imapct Normal, under Break Hit Result is the direction in world space of the trace test.
To set the Collision of BumperMesh, three types of colliders are added: Thin capsule on the inside, around the top, and the overlap region.
Whenever the ball enters overlap region, bumper gets activated.
When something overlaps the given region, check whether it's a Ball.
Blueprint of Bumper::
Cast to <Anything> tries to verify that it is that kinda object that's being read into it.
Add Capsule Collision in the viewport.
Sound, Movement, Material and Light needs to be added for more effectiveness.
In Material window, Hold T+Left-Click to create Texture node
In Material window, Hold L+Left-Click to create Lerp(Linear Interpolation) node
Create a Custom Event- Bump.
In Material window, Hold M+Left-Click to create Multiply node
In Material window, Hold S+Left-Click to create Scalar Parameter node
It looks nice but reasonably subtle, when something is lighting up beneath the surface, to have a rather smooth level of roughness.
Make sure by default, Emissive Boost is set to 0.
Component changes and Adding lights is next.
--------------------------
Bumper is setup to send the Ball away from it.
Timeline is developer's way creating a mini-graph of time vs variable and letting it drive parameters within any blueprint created.
To set timetine transition to auto, Press 1.
*****Update in Timeline is used to derive different parameters within a bumper. Very useful technique used all the time within different areas of Unreal.
Blowing up the top of bumper requires one extra step.
It involves creating a Material Instance Dynamic(MID).
Because all the bumpers are using the same shader, changing the variable to be brighter and darker again, it's not gonna work.
Because we need to create a Dynamic Instance that solely applies to that one bumper.
So each bumper has an individual set of parameters, so that there can be different brighness levels to each other according to where they are when they're getting hit.
To do so, modify costruction script of bumper blueprint.
*******Make sure to use element index 1 and not 0. Otherwise it won't work, because they're different material channels.
Store reference to the dynamic material into variable.
To add sound, create Spawn sound attached node between Add Impuse(Impulse) and Bump Lerp(Timeline). Because, if added after update/ attached to the update parameter, it will be played at every frame, which would be horrible.
*****Sound waves are imported, but it's more useful to play sound ***cues in the game.
Sound cue is a way of setting up sounds, so that they can be a little bit more dynamic just playing the prerecorded sound.
By selecting multiple sound waves in content browser, sound editor gives options to create Random Multiple Waves(On Right-Click).
With this, multiple sounds can be played dyanamically, at different times.
Modulator, added between Random Multiple Waves and Sound Cue/ Output, slightly modifies the pitch and the volume, every time sounds are played, so that it doesn't sound like large range of sounds being randomly selected. 
Set newly created Sound Cue in Spawn Sound Attached of Bumper blueprint.
Attach to Component is attached to the Bumper Mesh.








